{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sebastian\\\\Desktop\\\\progra\\\\country-pi\\\\client\\\\src\\\\components\\\\buscador\\\\FilterActivity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getActivity } from '../../redux/actions';\nimport style from './FilterActivity.module.css';\nimport { activityFilter } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterActivity = ({\n  actividades,\n  setActividades,\n  clearFilters\n}) => {\n  _s();\n  const activity = useSelector(state => state.activity);\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const handleChange = e => {\n    clearFilters();\n    setActividades(e.target.value);\n    console.log(actividades);\n  };\n  useEffect(() => {\n    setIsLoading(false);\n    dispatch(getActivity()).catch(err => console.error(err));\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando actividades...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this);\n  }\n  if (!activity || !activity.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: style.no,\n      children: \"No hay actividades disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.caja,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"continent\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Actividades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.scroll,\n      children: activity.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.alinear,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: item.name,\n          value: item.name,\n          onChange: handleChange,\n          checked: actividades === item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: item.id,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(FilterActivity, \"KDQaE00mR8ZDHffagW9DfvbXz3Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = FilterActivity;\nexport default FilterActivity;\nvar _c;\n$RefreshReg$(_c, \"FilterActivity\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","getActivity","style","activityFilter","jsxDEV","_jsxDEV","FilterActivity","actividades","setActividades","clearFilters","_s","activity","state","dispatch","isLoading","setIsLoading","handleChange","e","target","value","console","log","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","no","caja","htmlFor","scroll","map","item","alinear","type","id","name","onChange","checked","_c","$RefreshReg$"],"sources":["C:/Users/Sebastian/Desktop/progra/country-pi/client/src/components/buscador/FilterActivity.jsx"],"sourcesContent":["import React,{ useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getActivity } from '../../redux/actions';\r\nimport style from './FilterActivity.module.css'\r\nimport { activityFilter } from \"../../redux/actions\";\r\n\r\nconst FilterActivity = ({actividades, setActividades,clearFilters}) => {\r\n    const activity = useSelector(state => state.activity);\r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    \r\n\r\n\r\n  const handleChange = (e) => {\r\n    clearFilters();\r\n    setActividades(e.target.value);\r\n    console.log(actividades);\r\n  };\r\n    \r\n    useEffect(() => {\r\n      setIsLoading(false);\r\n      dispatch(getActivity())\r\n        .catch(err => console.error(err));\r\n    }, []);\r\n  \r\n    if (isLoading) {\r\n      return <p>Cargando actividades...</p>;\r\n    }\r\n  \r\n    if (!activity || !activity.length) {\r\n      return <p className={style.no}>No hay actividades disponibles.</p>;\r\n    }\r\n    \r\n  \r\n    return (\r\n        <div className={style.caja}>\r\n            <label htmlFor=\"continent\" ><strong>Actividades</strong></label>\r\n          <div className={style.scroll}>\r\n            {activity.map(item => (\r\n              <div key={item.name} className={style.alinear}>\r\n                <input\r\n                  type=\"radio\"\r\n                  id={item.name}\r\n                  value={item.name}\r\n                  onChange={handleChange}\r\n                  checked={actividades === item.name}\r\n                />\r\n                <label htmlFor={item.id}>{item.name}</label>\r\n              </div>\r\n            ))}\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default FilterActivity;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}