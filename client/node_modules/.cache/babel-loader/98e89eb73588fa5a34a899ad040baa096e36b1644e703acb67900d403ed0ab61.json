{"ast":null,"code":"import { GET_PAISES, GET_ACTIVITY, ORDENADOR, ORDENADORPOB, FILTERS, PAIS_FILTER, CONTINENT_FILTER, ACTIVITY_FILTER, PAIS_DETAIL, PAISES_SELECCIONADOS } from \"../actions\";\nconst initialState = {\n  paises: [],\n  pais: [],\n  paisDetail: {},\n  cosas: \"\",\n  continents: [],\n  paisSelec: [],\n  activity: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PAISES:\n      return {\n        paises: action.payload,\n        pais: action.payload,\n        continents: []\n      };\n    case GET_ACTIVITY:\n      return {\n        ...state,\n        activity: action.payload\n      };\n    case ORDENADOR:\n      function compareAZ(a, b) {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      }\n      function compareZA(a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n        if (a.name < b.name) {\n          return 1;\n        }\n        return 0;\n      }\n      return {\n        paises: state.paises,\n        pais: action.payload === \"AZ\" ? state.pais.sort(compareAZ) : state.pais.sort(compareZA)\n      };\n    case ORDENADORPOB:\n      function menor(a, b) {\n        if (a.poblacion < b.poblacion) {\n          return -1;\n        }\n        if (a.poblacion > b.poblacion) {\n          return 1;\n        }\n        return 0;\n      }\n      function mayor(a, b) {\n        if (a.poblacion > b.poblacion) {\n          return -1;\n        }\n        if (a.poblacion < b.poblacion) {\n          return 1;\n        }\n        return 0;\n      }\n      return {\n        paises: state.paises,\n        pais: action.payload === \"Mas\" ? state.pais.sort(mayor) : state.pais.sort(menor)\n      };\n    case FILTERS:\n      const {\n        search,\n        continents\n      } = action.payload;\n      let filteredCountries = state.paises;\n      if (search) {\n        filteredCountries = filteredCountries.filter(dato => dato.name.toLowerCase().includes(search.toLocaleLowerCase()));\n      }\n      if (continents.length) {\n        filteredCountries = filteredCountries.filter(dato => continents.includes(dato.continente));\n      }\n      return {\n        ...state,\n        pais: filteredCountries.length ? filteredCountries : state.paises\n      };\n    case PAIS_FILTER:\n      return {\n        ...state,\n        pais: !action.payload ? state.paises : state.paises.filter(dato => dato.name.toLowerCase().includes(action.payload.toLocaleLowerCase())),\n        filter: action.payload\n      };\n    case CONTINENT_FILTER:\n      return {\n        ...state,\n        pais: !action.payload.length ? state.paises : state.paises.filter(dato => action.payload.includes(dato.continente)),\n        filter: state.filter\n      };\n    case ACTIVITY_FILTER:\n      const {\n        name,\n        Countrys\n      } = action.payload;\n      const countryIds = Countrys.map(country => country.id);\n      return {\n        ...state,\n        pais: !countryIds.length ? state.paises : state.paises.filter(pais => countryIds.includes(pais.id))\n      };\n    case PAIS_DETAIL:\n      return {\n        ...state,\n        paisDetail: action.payload\n      };\n    case PAISES_SELECCIONADOS:\n      return {\n        ...state,\n        paisSelec: !action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_PAISES","GET_ACTIVITY","ORDENADOR","ORDENADORPOB","FILTERS","PAIS_FILTER","CONTINENT_FILTER","ACTIVITY_FILTER","PAIS_DETAIL","PAISES_SELECCIONADOS","initialState","paises","pais","paisDetail","cosas","continents","paisSelec","activity","rootReducer","state","action","type","payload","compareAZ","a","b","name","compareZA","sort","menor","poblacion","mayor","search","filteredCountries","filter","dato","toLowerCase","includes","toLocaleLowerCase","length","continente","Countrys","countryIds","map","country","id"],"sources":["C:/Users/Sebastian/Desktop/progra/country-pi/client/src/redux/reducer/index.js"],"sourcesContent":["import {\r\n  GET_PAISES,\r\n  GET_ACTIVITY,\r\n  ORDENADOR,\r\n  ORDENADORPOB,\r\n  FILTERS,\r\n  PAIS_FILTER,\r\n  CONTINENT_FILTER,\r\n  ACTIVITY_FILTER,\r\n  PAIS_DETAIL,\r\n  PAISES_SELECCIONADOS,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  paises: [],\r\n  pais: [],\r\n  paisDetail: {},\r\n  cosas: \"\",\r\n  continents: [],\r\n  paisSelec: [],\r\n  activity: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PAISES:\r\n      return {\r\n        paises: action.payload,\r\n        pais: action.payload,\r\n        continents: [],\r\n      };\r\n    case GET_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        activity: action.payload,\r\n        \r\n\r\n      };\r\n\r\n    case ORDENADOR:\r\n      function compareAZ(a, b) {\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }\r\n      function compareZA(a, b) {\r\n        if (a.name > b.name) {\r\n          return -1;\r\n        }\r\n        if (a.name < b.name) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }\r\n      return {\r\n        paises: state.paises,\r\n        pais:\r\n          action.payload === \"AZ\"\r\n            ? state.pais.sort(compareAZ)\r\n            : state.pais.sort(compareZA),\r\n      };\r\n\r\n    case ORDENADORPOB:\r\n      function menor(a, b) {\r\n        if (a.poblacion < b.poblacion) {\r\n          return -1;\r\n        }\r\n        if (a.poblacion > b.poblacion) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }\r\n      function mayor(a, b) {\r\n        if (a.poblacion > b.poblacion) {\r\n          return -1;\r\n        }\r\n        if (a.poblacion < b.poblacion) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }\r\n      return {\r\n        paises: state.paises,\r\n        pais:\r\n          action.payload === \"Mas\"\r\n            ? state.pais.sort(mayor)\r\n            : state.pais.sort(menor),\r\n      };\r\n\r\n    case FILTERS:\r\n      const { search, continents } = action.payload;\r\n      let filteredCountries = state.paises;\r\n      if (search) {\r\n        filteredCountries = filteredCountries.filter((dato) =>\r\n          dato.name.toLowerCase().includes(search.toLocaleLowerCase())\r\n        );\r\n      }\r\n      if (continents.length) {\r\n        filteredCountries = filteredCountries.filter((dato) =>\r\n          continents.includes(dato.continente)\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n        pais: filteredCountries.length ? filteredCountries : state.paises, \r\n      };\r\n    case PAIS_FILTER:\r\n      return {\r\n        ...state,\r\n        pais: !action.payload\r\n          ? state.paises\r\n          : state.paises.filter((dato) =>\r\n              dato.name\r\n                .toLowerCase()\r\n                .includes(action.payload.toLocaleLowerCase())\r\n            ),\r\n        filter: action.payload,\r\n      };\r\n    case CONTINENT_FILTER:\r\n      return {\r\n        ...state,\r\n        pais: !action.payload.length\r\n          ? state.paises\r\n          : state.paises.filter((dato) =>\r\n              action.payload.includes(dato.continente)\r\n            ),\r\n        filter: state.filter,\r\n      };\r\n      case ACTIVITY_FILTER:\r\n      const { name, Countrys } = action.payload;\r\n      \r\n      const countryIds = Countrys.map(country => country.id);\r\n      return {\r\n        ...state,\r\n        pais: !countryIds.length\r\n        ? state.paises\r\n        :state.paises.filter(pais => countryIds.includes(pais.id))\r\n      };\r\n  \r\n      \r\n\r\n    case PAIS_DETAIL:\r\n      return {\r\n        ...state,\r\n        paisDetail: action.payload,\r\n      };\r\n    case PAISES_SELECCIONADOS:\r\n      return {\r\n        ...state,\r\n        paisSelec: !action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}